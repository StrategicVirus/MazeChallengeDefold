local speed = 100

local function Hit_wall(self)
	go.set_position(self.previous_pos)
end

function init(self)
	--print("init")
	msg.post(".", "acquire_input_focus")

	self.movement = false
	self.direction = vmath.vector3()
	self.current_animation = nil
	self.next_animation = nil

	print("player init")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt, action)
	self.previous_pos = go.get_position()
	self.pos = go.get_position()
	-- means player can't go out of bounds
	if self.pos.x < 0 then
		self.pos.x = 0
	end
	if self.pos.y > 979 then
		self.pos.y = 979
	end
	if self.pos.y < 0 then
		self.pos.y = 0
	end
	if self.pos.x > 979 then
		self.pos.x = 979
	end

	go.set_position(self.pos + self.direction * speed * dt)
	
	-- all this if block is to change anim based on dir
	if self.direction.y > 0 and self.movement == false then
		self.next_animation = hash("player_backwards_still")
		
	elseif self.direction.y < 0 and self.movement == false then
		self.next_animation = hash("player_forwards_still")
		
	elseif self.direction.x > 0 and self.movement == false then
		self.next_animation = hash("player_right_still")
		
	elseif self.direction.x < 0 and self.movement == false then
		self.next_animation = hash("player_left_still")
	end
	
	if self.next_animation ~= self.current_animation then
		msg.post("#sprite", "play_animation", {id = self.next_animation})
		self.current_animation = self.next_animation
	end
	self.direction.x = 0
	self.direction.y = 0
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("back") then
		Hit_wall(self)
	end
end

function on_input(self, action_id, action)
	
	if action_id == hash("player_up") then
		self.direction.y = 1
		self.direction.x = 0
		self.next_animation = hash("player_backwards")
		self.movement = true
	elseif action_id == hash("player_left") then
		self.direction.x = -1
		self.direction.y = 0
		self.next_animation = hash("player_left")
		self.movement = true
	elseif action_id == hash("player_down") then
		self.direction.y = -1
		self.direction.x = 0
		self.next_animation = hash("player_forwards")
		self.movement = true
	elseif action_id == hash("player_right") then
		self.direction.x = 1
		self.direction.y = 0
		self.next_animation = hash("player_right")
		self.movement = true
	end

	if action.released then
		self.movement = false
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
